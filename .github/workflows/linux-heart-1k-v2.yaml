name: Linux - heart_1k_v2

on: 
  workflow_dispatch:
  push:
    paths:
      - '.github/workflows/linux-heart-1k-v2.yaml'

jobs:
  linux-heart-1k-v2:
    name: Linux - heart_1k_v2
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    env:
      SQ_EXAMPLE: heart_1k_v2_fastq
      SQ_TARGET: utrome_mm10_v2
      
    strategy:
      fail-fast: false
        
    steps:
      - name: clone scUTRquant
        uses: actions/checkout@v4
        with:
          repository: Mayrlab/scUTRquant
          ref: dev
          path: scUTRquant
      
      - name: view scUTRquant
        run: ls -lh $GITHUB_WORKSPACE/scUTRquant
            
      - name: install Miniforge
        uses: conda-incubator/setup-miniconda@v3
        with:
          miniforge-version: latest
          channel-priority: flexible
          
      - name: install Snakemake
        run: |
          mamba create \
          --name snakemake \
          -c conda-forge -c bioconda \
          'snakemake>=6'
          
      - name: verify Snakemake
        run: |
          conda activate snakemake
          snakemake -h
      
      - name: download example files
        run: |
          cd $GITHUB_WORKSPACE/scUTRquant/examples/$SQ_EXAMPLE/
          . download.sh
          
      - name: run scUTRquant
        run: |
          conda activate snakemake
          cd $GITHUB_WORKSPACE/scUTRquant
          snakemake -p -j2 --use-conda \
          --configfile examples/$SQ_EXAMPLE/config.yaml \
          --config output_format=h5ad,sce

      - name: save outputs
        uses: actions/upload-artifact@v4
        with:
          name: scUTRquant-outputs
          path: |
            ${{ github.workspace }}/scUTRquant/data/h5ad/${{ env.SQ_TARGET }}/${{ env.SQ_EXAMPLE }}*.h5ad
            ${{ github.workspace }}/scUTRquant/data/sce/${{ env.SQ_TARGET }}/${{ env.SQ_EXAMPLE }}*.Rds
            ${{ github.workspace }}/scUTRquant/qc/umi_count/${{ env.SQ_TARGET }}/${{ env.SQ_EXAMPLE }}*.html
